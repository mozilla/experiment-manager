version: "3"

services:
  app:
    image: app:build
    env_file: .env
    stdin_open: true
    tty: true
    links:
      - db
      - redis
      - kinto
    volumes:
      - ./app:/app
      - /app/node_modules/
      - /app/experimenter/static/core/node_modules/
      - /app/experimenter/static/rapid/node_modules/
      - assets_volume:/app/experimenter/static/assets/
      - static_volume:/app/experimenter/served/
      - /app/.cache
    command: bash -c "/app/bin/wait-for-it.sh kinto:8888 -- python bin/setup_kinto.py;/app/bin/wait-for-it.sh db:5432 -- python /app/manage.py collectstatic --noinput;python /app/manage.py runserver 0:7001"
    networks:
      - private_nw
      - public_nw

  yarn-core:
    image: app:build
    env_file: .env
    tty: true
    volumes:
      - ./app:/app
      - /app/node_modules/
      - /app/experimenter/static/core/node_modules/
      - assets_volume:/app/experimenter/static/assets/
      - static_volume:/app/experimenter/served/
      - /app/.cache
    command: bash -c "yarn workspace @experimenter/core watch"

  yarn-rapid:
    image: app:build
    env_file: .env
    tty: true
    volumes:
      - ./app:/app
      - /app/node_modules/
      - /app/experimenter/static/rapid/node_modules/
      - assets_volume:/app/experimenter/static/assets/
      - static_volume:/app/experimenter/served/
      - /app/.cache
    command: bash -c "yarn workspace @experimenter/rapid watch"

  worker:
    image: app:build
    env_file: .env
    links:
      - db
      - redis
    volumes:
      - ./app:/app
    command: bash -c "/app/bin/wait-for-it.sh db:5432 -- celery -A experimenter worker -l debug"
    networks:
      - private_nw
      - public_nw

  beat:
    image: app:build
    env_file: .env
    links:
      - db
      - redis
    volumes:
      - ./app:/app
    command: bash -c "/app/bin/wait-for-it.sh db:5432 -- celery -A experimenter beat --pidfile /celerybeat.pid -s /celerybeat-schedule -l debug"
    networks:
      - private_nw

  nginx:
    build: ./nginx
    env_file: .env
    links:
      - app
    ports:
      - "443:443"
    networks:
      - private_nw
      - public_nw
    volumes:
      - static_volume:/app/experimenter/served/

  db:
    restart: always
    image: postgres:9.6.17
    environment:
      POSTGRES_PASSWORD: postgres
    volumes:
      - db_volume:/var/lib/postgresql
    networks:
      - private_nw

  redis:
    image: redis
    networks:
      - private_nw

  kinto:
    image: mozilla/kinto-dist
    environment:
      KINTO_INI: /etc/kinto.ini
    networks:
      - private_nw
      - public_nw
    ports:
      - "8888:8888"
    links:
      - autograph
    volumes:
      - ./kinto/server.ini:/etc/kinto.ini
      - kinto_volume:/attachments

  autograph:
    image: mozilla/autograph
    networks:
      - private_nw
    ports:
      - "8000:8000"

volumes:
  db_volume:
  static_volume:
  assets_volume:
  kinto_volume:

networks:
  private_nw:
    internal: true
  public_nw:
