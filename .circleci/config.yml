version: 2.1
jobs:
  build:
    machine:
      docker_layer_caching: true
      image: ubuntu-1604:201903-01 # recommended linux image - includes Ubuntu 16.04, docker 18.09.3, docker-compose 1.23.1
    resource_class: large
    working_directory: ~/experimenter
    steps:
      - run:
          name: Docker info
          command: docker -v
      - run:
          name: Docker compose info
          command: docker-compose -v
      - checkout
      - run:
          name: Build images
          command: make test_build
      - run:
          name: Run tests and linting
          command: make check
      - run:
          name: Publish Storybooks
          command: make publish_storybooks

  integration:
    machine:
      docker_layer_caching: true
      image: ubuntu-1604:201903-01 # recommended linux image - includes Ubuntu 16.04, docker 18.09.3, docker-compose 1.23.1
    resource_class: large
    working_directory: ~/experimenter
    steps:
      - run:
          name: Docker info
          command: docker -v
      - run:
          name: Docker compose info
          command: docker-compose -v
      - checkout
      - run:
          name: Build docker images
          command: |
            cp .env.sample .env
            make integration_build
      - run:
          name: Run integration tests
          command: |
            sudo chmod -R a+rwx app/tests/
            make refresh
            make up_detached
            make integration_test
            make kill
      - store_artifacts:
          path: app/tests/integration/integration-test.html

  deploy:
    working_directory: ~/experimenter
    docker:
      - image: docker:17.06.0-ce-git
    steps:
      - checkout
      - setup_remote_docker
      - deploy:
          name: Deploy to latest
          command: |
            ./scripts/build.sh
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker tag app:deploy ${DOCKERHUB_REPO}:latest
            docker push ${DOCKERHUB_REPO}:latest

workflows:
  version: 2
  build:
    jobs:
      - build:
          name: build
      - integration:
          name: integration
          filters:
            branches:
              ignore:
                - main
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: main
